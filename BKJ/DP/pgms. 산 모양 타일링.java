
/* 
 * n개의 타일을 만드는 경우의 수
 * 삼각형 한개를 쓰거나, 삼각형 두개를 합친 사다리꼴을 사용하거나
*/ 

class Solution {
    public int solution(int n, int[] tops) {
        
        // dp[n] -> n개의 삼각형으로 이루어진 타일을 채우는 경우의 수
        int[] dp=new int[2*n+1];
        dp[0]=1; // 삼각형이 1개일 때 경우의 수
        // 삼각형이 2개일 때 가능한 경우의 수
        if(tops[0]==1){
            dp[1]=3;
        }
        else{
            dp[1]=2;
        }
        
        for(int i=2; i<2*n+1; i++){
            // 삼각형을 올릴 수 있는 경우 -> 역삼각형 이고(삼각형 개수가 짝수일 때), 올릴 삼각혐이 있을때     
            if(i % 2==1 && tops[i/2]==1) {
            	// dp[i-2]: 마지막이 사다리꼴로 채워지는 경우, dp[i-1]: 마지막이 삼각형으로 채워지는 경우
                dp[i] = (dp[i-1] * 2 + dp[i-2]) % 10007;
            }
            else{
               dp[i]=(dp[i-2]+dp[i-1]) % 10007; 
            }
        }
        
        return dp[2*n];
    }
}